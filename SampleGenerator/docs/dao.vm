##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Repository"))

##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/repository"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

##设置包名
package $!{tableInfo.savePackageName}.repository;

##导包
import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import java.util.Optional;
##import org.springframework.transaction.annotation.Transactional;
##import org.springframework.data.jpa.repository.JpaRepository;
##import org.springframework.data.jpa.repository.Modifying;


/**
 * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层
 *
 * @author $!author
 * @since $!time.currTime()
 */
public interface $!{tableName} extends JpaRepository<$!{tableInfo.name}, $!pk.shortType> {

	#if(${pk.name} != "id")
	Optional<$!{tableInfo.name}> findBy$!{tool.firstUpperCase($!{pk.name})}($!{pk.shortType} $!{pk.name});
	#end

    #if(${pk.name} != "id")
    @Modifying(clearAutomatically = true)
	@Transactional
	void deleteBy$!{tool.firstUpperCase($!{pk.name})}($!{pk.shortType} $!{pk.name});
	#end
}
##@Modifying
##@Transactional
##void $tool.append("deleteBy", $tool.firstUpperCase($!{pk.name}))($!{pk.shortType} $!{pk.name});
