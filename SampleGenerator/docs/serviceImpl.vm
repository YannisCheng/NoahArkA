##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "ServiceImpl"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/service/impl"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;

import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.repository.$!{tableInfo.name}Repository;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import org.springframework.stereotype.Service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.beans.BeanUtils;
import java.util.Optional;
import java.util.List;

/**
 * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类
 *
 * @author $!author
 * @since $!time.currTime()
 */
@Service("$!tool.firstLowerCase($!{tableInfo.name})Service")
public class $!{tableName} implements $!{tableInfo.name}Service {

    @Autowired
    private $!{tableInfo.name}Repository $!tool.firstLowerCase($!{tableInfo.name})Repository;


    // --------------------------------------  查  --------------------------------------
    /**
     * 通过主键$!{pk.name}查询单条数据
     *
     * @param $!pk.name 主键
     * @return 实例对象
     */
    @Override
    public Optional<$!{tableInfo.name}> findBy$!{tool.firstUpperCase($!{pk.name})}($!{pk.shortType} $!{pk.name}){
        return $!{tool.firstLowerCase($!{tableInfo.name})}Repository.findBy$!{tool.firstUpperCase($!{pk.name})}($!{pk.name});
    }


    /**
     * 不分页查询所有数据
     *
     * @return 所有数据
     */
    @Override
    public List<$!{tableInfo.name}> findAll(Sort sort){
        return $!{tool.firstLowerCase($!{tableInfo.name})}Repository.findAll(sort);
    }


    /**
     * 通过分页查询多条数据
     *
     * @param  pageable 分页
     * @return 分页数据
     */
    @Override
    public Page<$!{tableInfo.name}> findByPage(Pageable pageable){
        return $!{tool.firstLowerCase($!{tableInfo.name})}Repository.findAll(pageable);
    }


    #if(${tableInfo.name.indexOf("Table")}!=-1)
/**
     * 通过 idcard_stu：身份证号 查询单条数据
     *
     * @param idCard 身份证号
     * @return 实例对象
     */
    @Override
    public Optional<$!{tableInfo.name}> findByIdCard(String idCard){
        return $!{tool.firstLowerCase($!{tableInfo.name})}Repository.findByIdcardStu(idCard);
    }
    #end


    #if(${tableInfo.name.indexOf("Table")}!=-1)
/**
     * 通过 stu_id：学号 查询单条数据
     *
     * @param stuId 学号
     * @return 实例对象
     */
    @Override
    public Optional<$!{tableInfo.name}> findByStuId(String stuId){
        return $!{tool.firstLowerCase($!{tableInfo.name})}Repository.findByStuId(stuId);
    }
    #end


    // --------------------------------------  增  --------------------------------------
    /**
     * 保存单个对象
     *
     * @return 保存后的对象
     */
    @Override
    public $!{tableInfo.name} saveOne($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}){
        return $!{tool.firstLowerCase($!{tableInfo.name})}Repository.save($!{tool.firstLowerCase($tableInfo.name)});
    }


    // --------------------------------------  改  --------------------------------------
    /**
     * 通过obj更新单个对象
     *
     * @return 保存后的对象
     */
    @Override
    public $!{tableInfo.name} updateByObj($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}){
        Optional<$!{tableInfo.name}>  optional = $!{tool.firstLowerCase($!{tableInfo.name})}Repository.findBy$!{tool.firstUpperCase($!{pk.name})}($!{tool.firstLowerCase($tableInfo.name)}.$!{pk.name});
        boolean present = optional.isPresent();
        if(present){
            BeanUtils.copyProperties($!{tool.firstLowerCase($tableInfo.name)}, optional.get());
            return $!{tool.firstLowerCase($!{tableInfo.name})}Repository.save(optional.get());
        }
        return null;
    }


    // --------------------------------------  删  --------------------------------------
    /**
     * 通过主键$!{pk.name}删除单条数据
     *
     * @param $!{pk.name} 主键
     */
    @Override
    public void deleteBy$!{tool.firstUpperCase($!{pk.name})}($!{pk.shortType} $!{pk.name}){
        $!{tool.firstLowerCase($!{tableInfo.name})}Repository.deleteBy$!{tool.firstUpperCase($!{pk.name})}($!{pk.name});
    }
}
